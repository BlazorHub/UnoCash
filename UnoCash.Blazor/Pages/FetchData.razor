@page "/fetchdata"
@inject HttpClient Http

<h1>Expenses</h1>

<p>Expenses for the account: Current</p>

@if (_expenses == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Amount</th>
                <th>Description</th>
                <th>Status</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expense in _expenses)
            {
                <tr>
                    <td>@expense.Date.ToShortDateString()</td>
                    <td>@expense.Amount</td>
                    <td>@expense.Description</td>
                    <td>@expense.Status</td>
                    <td><BlazorButton onclick="@(() => Delete(expense))">X</BlazorButton> </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
Expense[] _expenses;

protected override async Task OnInitAsync() =>
    _expenses =
        await Http.GetJsonAsync<Expense[]>("http://localhost:7071/api/GetExpenses?account=Current");

    Task Delete(Expense expense) => 
        Http.DeleteAsync($"http://localhost:7071/api/DeleteExpense?id={expense.Id}");
}
